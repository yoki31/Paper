From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 15 Jun 2013 19:52:04 -0400
Subject: [PATCH] EntityShootBowEvent consumeArrow and getArrowItem API

Adds ability to get what arrow was shot, and control if it should be consumed.

diff --git a/src/main/java/org/bukkit/event/entity/EntityShootBowEvent.java b/src/main/java/org/bukkit/event/entity/EntityShootBowEvent.java
index 8200ac4e2990d8751f9c5fb02bc5e173d59d7d94..85e2277efa62d8610979003b6d37bda4352e732e 100644
--- a/src/main/java/org/bukkit/event/entity/EntityShootBowEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityShootBowEvent.java
@@ -22,7 +22,32 @@ public class EntityShootBowEvent extends EntityEvent implements Cancellable {
     private final float force;
     private boolean consumeItem;
     private boolean cancelled;
+    // Paper start
+    @Deprecated
+    public void setConsumeArrow(boolean consumeArrow) {
+        this.setConsumeItem(consumeArrow);
+    }
+
+    @Deprecated
+    public boolean getConsumeArrow() {
+        return this.shouldConsumeItem();
+    }
+
+    @Nullable @Deprecated
+    public ItemStack getArrowItem() {
+        return this.getConsumable();
+    }
+
+    @Deprecated
+    public EntityShootBowEvent(@NotNull final LivingEntity shooter, @Nullable final ItemStack bow, @NotNull final Entity projectile, final float force) {
+        this(shooter, bow, new ItemStack(org.bukkit.Material.AIR), projectile, force);
+    }
 
+    @Deprecated
+    public EntityShootBowEvent(@NotNull final LivingEntity shooter, @Nullable final ItemStack bow, @NotNull ItemStack arrowItem, @NotNull final Entity projectile, final float force) {
+        this(shooter, bow, arrowItem, projectile, EquipmentSlot.HAND, force, true);
+    }
+    // Paper end
     public EntityShootBowEvent(@NotNull final LivingEntity shooter, @Nullable final ItemStack bow, @Nullable final ItemStack consumable, @NotNull final Entity projectile, @NotNull final EquipmentSlot hand, final float force, final boolean consumeItem) {
         super(shooter);
         this.bow = bow;
