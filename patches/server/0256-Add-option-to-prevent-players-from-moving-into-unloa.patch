From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gabriele C <sgdc3.mail@gmail.com>
Date: Mon, 22 Oct 2018 17:34:10 +0200
Subject: [PATCH] Add option to prevent players from moving into unloaded
 chunks #1551


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 5f3d7ea96d690b68897d9092c624c77e49822af4..31be5462945287bff7e5c1a3c1f38d6a510ddeb0 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -500,9 +500,9 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                 double d0 = entity.getX();
                 double d1 = entity.getY();
                 double d2 = entity.getZ();
-                double d3 = ServerGamePacketListenerImpl.clampHorizontal(packet.position().x());
-                double d4 = ServerGamePacketListenerImpl.clampVertical(packet.position().y());
-                double d5 = ServerGamePacketListenerImpl.clampHorizontal(packet.position().z());
+                double d3 = ServerGamePacketListenerImpl.clampHorizontal(packet.position().x()); final double toX = d3; // Paper - OBFHELPER
+                double d4 = ServerGamePacketListenerImpl.clampVertical(packet.position().y()); final double toY = d4; // Paper - OBFHELPER
+                double d5 = ServerGamePacketListenerImpl.clampHorizontal(packet.position().z()); final double toZ = d5; // Paper - OBFHELPER
                 float f = Mth.wrapDegrees(packet.yRot());
                 float f1 = Mth.wrapDegrees(packet.xRot());
                 double d6 = d3 - this.vehicleFirstGoodX;
@@ -536,6 +536,16 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                 }
                 speed *= 2f; // TODO: Get the speed of the vehicle instead of the player
 
+                // Paper start - Prevent moving into unloaded chunks
+                if (this.player.level().paperConfig().chunks.preventMovingIntoUnloadedChunks && (
+                    !worldserver.areChunksLoadedForMove(this.player.getBoundingBox().expandTowards(new Vec3(toX, toY, toZ).subtract(this.player.position()))) ||
+                        !worldserver.areChunksLoadedForMove(entity.getBoundingBox().expandTowards(new Vec3(toX, toY, toZ).subtract(entity.position())))
+                    )) {
+                    this.connection.send(ClientboundMoveVehiclePacket.fromEntity(entity));
+                    return;
+                }
+                // Paper end - Prevent moving into unloaded chunks
+
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
                 // CraftBukkit end
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", new Object[]{entity.getName().getString(), this.player.getName().getString(), d6, d7, d8});
@@ -1228,9 +1238,9 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                 }
 
                 if (!this.updateAwaitingTeleport() && this.player.hasClientLoaded()) {
-                    double d0 = ServerGamePacketListenerImpl.clampHorizontal(packet.getX(this.player.getX()));
-                    double d1 = ServerGamePacketListenerImpl.clampVertical(packet.getY(this.player.getY()));
-                    double d2 = ServerGamePacketListenerImpl.clampHorizontal(packet.getZ(this.player.getZ()));
+                    double d0 = ServerGamePacketListenerImpl.clampHorizontal(packet.getX(this.player.getX())); final double toX = d0; // Paper - OBFHELPER
+                    double d1 = ServerGamePacketListenerImpl.clampVertical(packet.getY(this.player.getY())); final double toY = d1; // Paper - OBFHELPER
+                    double d2 = ServerGamePacketListenerImpl.clampHorizontal(packet.getZ(this.player.getZ())); final double toZ = d2; // Paper - OBFHELPER
                     float f = Mth.wrapDegrees(packet.getYRot(this.player.getYRot()));
                     float f1 = Mth.wrapDegrees(packet.getXRot(this.player.getXRot()));
 
@@ -1288,6 +1298,12 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                                 } else {
                                     speed = this.player.getAbilities().walkingSpeed * 10f;
                                 }
+                                // Paper start - Prevent moving into unloaded chunks
+                                if (this.player.level().paperConfig().chunks.preventMovingIntoUnloadedChunks && (this.player.getX() != toX || this.player.getZ() != toZ) && !worldserver.areChunksLoadedForMove(this.player.getBoundingBox().expandTowards(new Vec3(toX, toY, toZ).subtract(this.player.position())))) {
+                                    this.internalTeleport(PositionMoveRotation.of(this.player), Collections.emptySet());
+                                    return;
+                                }
+                                // Paper end - Prevent moving into unloaded chunks
 
                                 if (this.shouldCheckPlayerMovement(flag)) {
                                     float f2 = flag ? 300.0F : 100.0F;
